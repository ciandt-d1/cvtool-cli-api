# coding: utf-8

from __future__ import absolute_import
from swagger_server.models.annotation import Annotation
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class ImageResponse(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, id: str=None, job_id: str=None, original_uri: str=None, annotations: Annotation=None):
        """
        ImageResponse - a model defined in Swagger

        :param id: The id of this ImageResponse.
        :type id: str
        :param job_id: The job_id of this ImageResponse.
        :type job_id: str
        :param original_uri: The original_uri of this ImageResponse.
        :type original_uri: str
        :param annotations: The annotations of this ImageResponse.
        :type annotations: Annotation
        """
        self.swagger_types = {
            'id': str,
            'job_id': str,
            'original_uri': str,
            'annotations': Annotation
        }

        self.attribute_map = {
            'id': 'id',
            'job_id': 'job_id',
            'original_uri': 'original_uri',
            'annotations': 'annotations'
        }

        self._id = id
        self._job_id = job_id
        self._original_uri = original_uri
        self._annotations = annotations

    @classmethod
    def from_dict(cls, dikt) -> 'ImageResponse':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ImageResponse of this ImageResponse.
        :rtype: ImageResponse
        """
        return deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """
        Gets the id of this ImageResponse.
        Image id.

        :return: The id of this ImageResponse.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """
        Sets the id of this ImageResponse.
        Image id.

        :param id: The id of this ImageResponse.
        :type id: str
        """

        self._id = id

    @property
    def job_id(self) -> str:
        """
        Gets the job_id of this ImageResponse.
        Job id.

        :return: The job_id of this ImageResponse.
        :rtype: str
        """
        return self._job_id

    @job_id.setter
    def job_id(self, job_id: str):
        """
        Sets the job_id of this ImageResponse.
        Job id.

        :param job_id: The job_id of this ImageResponse.
        :type job_id: str
        """

        self._job_id = job_id

    @property
    def original_uri(self) -> str:
        """
        Gets the original_uri of this ImageResponse.
        The image to add to the database.

        :return: The original_uri of this ImageResponse.
        :rtype: str
        """
        return self._original_uri

    @original_uri.setter
    def original_uri(self, original_uri: str):
        """
        Sets the original_uri of this ImageResponse.
        The image to add to the database.

        :param original_uri: The original_uri of this ImageResponse.
        :type original_uri: str
        """

        self._original_uri = original_uri

    @property
    def annotations(self) -> Annotation:
        """
        Gets the annotations of this ImageResponse.

        :return: The annotations of this ImageResponse.
        :rtype: Annotation
        """
        return self._annotations

    @annotations.setter
    def annotations(self, annotations: Annotation):
        """
        Sets the annotations of this ImageResponse.

        :param annotations: The annotations of this ImageResponse.
        :type annotations: Annotation
        """

        self._annotations = annotations

