# coding: utf-8

from __future__ import absolute_import
from api.representations.annotations import Annotations
from api.representations.image_id_version import ImageIdVersion
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class AnnotationRequest(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, id_versions=None, annotations=None):
        """
        AnnotationRequest - a model defined in Swagger

        :param id_versions: The id_versions of this AnnotationRequest.
        :type id_versions: ImageIdVersion
        :param annotations: The annotations of this AnnotationRequest.
        :type annotations: Annotations
        """
        self.swagger_types = {
            'id_versions': ImageIdVersion,
            'annotations': Annotations
        }

        self.attribute_map = {
            'id_versions': 'id_versions',
            'annotations': 'annotations'
        }

        self._id_versions = id_versions
        self._annotations = annotations

    @classmethod
    def from_dict(cls, dikt):
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AnnotationRequest of this AnnotationRequest.
        :rtype: AnnotationRequest
        """
        return deserialize_model(dikt, cls)

    @property
    def id_versions(self):
        """
        Gets the id_versions of this AnnotationRequest.

        :return: The id_versions of this AnnotationRequest.
        :rtype: ImageIdVersion
        """
        return self._id_versions

    @id_versions.setter
    def id_versions(self, id_versions):
        """
        Sets the id_versions of this AnnotationRequest.

        :param id_versions: The id_versions of this AnnotationRequest.
        :type id_versions: ImageIdVersion
        """

        self._id_versions = id_versions

    @property
    def annotations(self):
        """
        Gets the annotations of this AnnotationRequest.

        :return: The annotations of this AnnotationRequest.
        :rtype: Annotations
        """
        return self._annotations

    @annotations.setter
    def annotations(self, annotations):
        """
        Sets the annotations of this AnnotationRequest.

        :param annotations: The annotations of this AnnotationRequest.
        :type annotations: Annotations
        """

        self._annotations = annotations

